**********Install on Local Linux Ubuntu**********
VERSION=$(curl --silent "https://api.github.com/repos/cloudflare/cfssl/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')
VNUMBER=${VERSION#"v"}
wget https://github.com/cloudflare/cfssl/releases/download/${VERSION}/cfssl_${VNUMBER}_linux_amd64 -O cfssl
chmod +x cfssl
sudo mv cfssl /usr/local/bin

VERSION=$(curl --silent "https://api.github.com/repos/cloudflare/cfssl/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')
VNUMBER=${VERSION#"v"}
wget https://github.com/cloudflare/cfssl/releases/download/${VERSION}/cfssljson_${VNUMBER}_linux_amd64 -O cfssljson
chmod +x cfssljson
sudo mv cfssljson /usr/local/bin
cfssljson -version

mkdir cert && cd cert

cat > ca-config.json <<EOF
{
    "signing": {
        "default": {
            "expiry": "8760h"
        },
        "profiles": {
            "etcd": {
                "expiry": "8760h",
                "usages": ["signing", "key encipherment", "server auth","client auth"]
            }
        }
    }
} 
EOF

cat > ca-csr.json <<EOF
{
    "CN": "etcd cluster",
    "Key": {
      "algo": "rsa",
      "size": 2048
    },
    "names": [
      {
        "C": "VN",
        "L": "Vietnamese",
        "O": "Kubernetes",
        "OU": "ETCD-CA",
        "ST": "HaNoi"
      }
    ]
}
EOF

cfssl gencert -initca ca-csr.json | cfssljson -bare ca
{

export ETCD1_IP="10.10.10.17"
export ETCD2_IP="10.10.10.18"

cat > etcd-csr.json <<EOF
{
    "CN": "etcd",
    "hosts": [
        "localhost",
        "127.0.0.1",
        "${ETCD1_IP}",
        "${ETCD2_IP}"
    ],
    "key": {
      "algo": "rsa",
      "size": 2048
    },
    "names": [
      {
        "C": "VN",
        "L": "Vietnamese",
        "O": "Kubernetes",
        "OU": "etcd",
        "ST": "HaNoi"
      }
    ]
}
EOF

}
cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=etcd etcd-csr.json | cfssljson -bare etcd
**********Install on etcd1 & etcd2**********

wget https://github.com/etcd-io/etcd/releases/download/v3.5.7/etcd-v3.5.7-linux-amd64.tar.gz
tar -zvxf etcd-v3.5.7-linux-amd64.tar.gz
cp etcd-v3.5.7-linux-amd64/etcd /usr/local/bin/
cp etcd-v3.5.7-linux-amd64/etcdctl /usr/local/bin/
rm -rf etcd*
**********Install on etcd1**********



***********Install on Node ETCD***********
{

declare -a NODES=(10.10.10.17 10.10.10.18)

for node in ${NODES[@]}; do
  scp ca.pem etcd.pem etcd-key.pem root@$node: 
done

}


mkdir /etc/etcd
mkdir /etc/etcd/ssl
cp ca.pem /etc/etcd/ssl/
cp etcd.pem /etc/etcd/ssl/
cp etcd-key.pem /etc/etcd/ssl/

{

NODE_IP="10.10.10.17"

ETCD_NAME=$(hostname -s)

ETCD1_IP="10.10.10.17"
ETCD2_IP="10.10.10.18"

cat > /etc/systemd/system/etcd.service <<EOF
[Unit]
Description=etcd

[Service]
Type=notify
ExecStart=/usr/local/bin/etcd
  --name ${ETCD_NAME}
  --cert-file=/etc/etcd/ssl/etcd.pem \\
  --key-file=/etc/etcd/ssl/etcd-key.pem \\
  --peer-cert-file=/etc/etcd/ssl/etcd.pem \\
  --peer-key-file=/etc/etcd/ssl/etcd-key.pem \\
  --trusted-ca-file=/etc/etcd/ssl/ca.pem \\
  --peer-trusted-ca-flie=etc/etcd/ssl/ca.pem \\
  --peer-client-cert-auth \\
  --initial-advertise-peer-urls https://${NODE_IP}:2380 \\
  --listen-peer-urls https://${NODE_IP}:2380 \\
  --advertise-client-urls https://${NODE_IP}:2379 \\
  --listen-client-urls https://${NODE_IP}:2379,https://127.0.0.1:2379 \\
  --initial-cluster-token etcd-cluster-1 \\
  --initial-cluster etcd1=https://${ETCD1_IP}:2380,etcd2=https://${ETCD2_IP}:2380 \\
  --initial-cluster-state new
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF

}
systemctl daemon-reload
systemctl restart etcd.service && systemctl status etcd.service

ETCDCTL_API=3 etcdctl \
  --endpoints=https://127.0.0.1:2379 \
  --cacert=/etc/etcd/ssl/ca.pem \
  --cert=/etc/etcd/ssl/etcd.pem \
  --key=/etc/etcd/ssl/etcd-key.pem \
  member list

etcdctl endpoint health
curl -L http://localhost:2379/health | grep -v debugging

