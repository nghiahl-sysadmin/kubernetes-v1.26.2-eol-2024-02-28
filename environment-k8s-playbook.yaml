- name: Configure Kubernetes nodes
  become: true
  hosts: all

  tasks:
    - name: Extend logical volume
      command: lvextend --resizefs -l +100%FREE /dev/mapper/ubuntu--vg-ubuntu--lv

    - name: Update /etc/hosts
      lineinfile:
        dest: /etc/hosts
        line: '127.0.0.1 localhost\n10.10.10.13 k8s-api1\n10.10.10.14 k8s-api2\n10.10.10.15 k8s-worker1\n10.10.10.16 k8s-worker2\n10.10.10.17 k8s-etcd1\n10.10.10.18 k8s-etcd2\n10.10.10.10 ha-vip'

    - name: Download containerd
      get_url:
        url: https://github.com/containerd/containerd/releases/download/v1.6.14/containerd-1.6.14-linux-amd64.tar.gz
        dest: /tmp/containerd-1.6.14-linux-amd64.tar.gz

    - name: Install containerd
      command: sudo tar Czxvf /usr/local /tmp/containerd-1.6.14-linux-amd64.tar.gz
      args:
        chdir: /tmp

    - name: Download containerd service file
      get_url:
        url: https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
        dest: /tmp/containerd.service

    - name: Move containerd service file
      copy:
        src: /tmp/containerd.service
        dest: /usr/lib/systemd/system/

    - name: Download runc
      get_url:
        url: https://github.com/opencontainers/runc/releases/download/v1.1.4/runc.amd64
        dest: /usr/local/sbin/runc

    - name: Create containerd config file
      command: containerd config default | sudo tee /etc/containerd/config.toml

    - name: Update containerd config file
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup \= false'
        replace: 'SystemdCgroup \= true'

    - name: Remove downloaded files
      file:
        path: /tmp/{{ item }}
        state: absent
      with_items:
        - containerd-1.6.14-linux-amd64.tar.gz
        - containerd.service

    - name: Reload and enable containerd
      systemd:
        daemon_reload: yes
        name: containerd
        enabled: yes
        state: started

    - name: Configure kernel parameters
      copy:
        dest: /etc/sysctl.d/99-k8s-cri.conf
        content: |
          net.bridge.bridge-nf-call-iptables=1
          net.bridge.bridge-nf-call-ip6tables=1
          net.ipv4.ip_forward=1

    - name: Reload kernel parameters
      command: sysctl --system

    - name: Load kernel modules
      command: echo -e 'overlay\nbr_netfilter' > /etc/modules-load.d/k8s.conf
      
    - name: Disable swap and update grub
  hosts: all
  become: true
  tasks:
    - name: Disable swap
      command: swapoff -a
    - name: Remove swap mount entry from /etc/fstab
      replace:
        path: /etc/fstab
        regexp: '^/swapfile'
        replace: '#/swapfile'
    - name: Update grub configuration
      replace:
        path: /etc/default/grub
        regexp: 'GRUB_CMDLINE_LINUX=".*"'
        replace: 'GRUB_CMDLINE_LINUX="systemd.unified_cgroup_hierarchy=0"'
    - name: Update grub
      command: update-grub

- name: Install Kubernetes components
  hosts: all
  become: true
  tasks:
   - name: Add Kubernetes repository GPG key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
   - name: Add Kubernetes repository
      command: echo "deb [signed-by=/etc/apt/keyrings/kubernetes-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list
   
   - name: Install Kubernetes packages
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
    - name: Configure kubelet
      lineinfile:
        path: /etc/default/kubelet
        line: 'KUBELET_EXTRA_ARGS=--cgroup-driver=systemd --container-runtime=remote --container-runtime-endpoint=unix:///run/containerd/containerd.sock'
    - name: Update iptables alternative
      command: update-alternatives --set iptables /usr/sbin/iptables-legacy
      args:
        creates: /usr/sbin/iptables-legacy
    - name: Restart containerd
      systemd:
        name: containerd.service
        state: restarted
